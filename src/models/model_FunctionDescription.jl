# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FunctionDescription
Function Description

    FunctionDescription(;
        description=nothing,
        name=nothing,
        parameters=nothing,
    )

    - description::String
    - name::String
    - parameters::Any
"""
Base.@kwdef mutable struct FunctionDescription <: OpenAPI.APIModel
    description::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    parameters::Union{Nothing, Any} = nothing

    function FunctionDescription(description, name, parameters, )
        o = new(description, name, parameters, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type FunctionDescription

const _property_types_FunctionDescription = Dict{Symbol,String}(Symbol("description")=>"String", Symbol("name")=>"String", Symbol("parameters")=>"Any", )
OpenAPI.property_type(::Type{ FunctionDescription }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FunctionDescription[name]))}

function OpenAPI.check_required(o::FunctionDescription)
    o.name === nothing && (return false)
    o.parameters === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::FunctionDescription)
    OpenAPI.validate_property(FunctionDescription, Symbol("description"), o.description)
    OpenAPI.validate_property(FunctionDescription, Symbol("name"), o.name)
    OpenAPI.validate_property(FunctionDescription, Symbol("parameters"), o.parameters)
end

function OpenAPI.validate_property(::Type{ FunctionDescription }, name::Symbol, val)



end
