# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Part_file

    PartFile(;
        filename=nothing,
        file_data=nothing,
    )

    - filename::String
    - file_data::String
"""
Base.@kwdef mutable struct PartFile <: OpenAPI.APIModel
    filename::Union{Nothing, String} = nothing
    file_data::Union{Nothing, String} = nothing

    function PartFile(filename, file_data, )
        o = new(filename, file_data, )
        OpenAPI.validate_properties(o)
        return o
    end
end # type PartFile

const _property_types_PartFile = Dict{Symbol,String}(Symbol("filename")=>"String", Symbol("file_data")=>"String", )
OpenAPI.property_type(::Type{ PartFile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PartFile[name]))}

function OpenAPI.check_required(o::PartFile)
    o.filename === nothing && (return false)
    o.file_data === nothing && (return false)
    true
end

function OpenAPI.validate_properties(o::PartFile)
    OpenAPI.validate_property(PartFile, Symbol("filename"), o.filename)
    OpenAPI.validate_property(PartFile, Symbol("file_data"), o.file_data)
end

function OpenAPI.validate_property(::Type{ PartFile }, name::Symbol, val)


end
